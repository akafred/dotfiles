- name: setup git - name
  command: git config --global user.name "akafred"

- name: setup git - email
  command: git config --global user.email "github@akafred.com" 

- name: create .gitignore_global
  command: touch {{ ansible_env.HOME }}/.gitignore_global creates={{ ansible_env.HOME }}/.gitignore_global

- name: add entries to .gitignore_global
  lineinfile: dest={{ ansible_env.HOME }}/.gitignore_global line={{ item }}
  with_items:
    - .DS_Store
    - .idea

- name: config to use .gitignore_global
  command: git config --global {{ item }}
  with_items:
    - core.excludesfile ~/.gitignore_global

- name: copy .gitmsg
  copy: >
    src={{ item }}
    dest="{{ ansible_env.HOME }}/{{ item }}"
  with_items:
    - .gitmsg

- name: setup .gitmsg
  command: git config --global {{ item }}
  with_items:
    - commit.template ~/.gitmsg

- name: config push default
  command: git config --global {{ item }}
  with_items:
    - push.default simple

- name: config colors
  command: git config --global {{ item }}
  with_items:
    - color.diff auto
    - color.status auto
    - color.branch auto

- name: config immediate autocorrect
  command: git config --global {{ item }}
  with_items:
    - help.autocorrect '-1'

- name: config aliases
  command: git config --global {{ item }}
  with_items:
    - alias.co checkout
    - alias.ci commit
    - alias.cp cherry-pick
    - alias.st status
    - alias.br branch
    - alias.hist 'log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'
    - alias.lg 'log --all --color --graph --pretty=format:"%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(blue)<%cn>%Creset%C(yellow)%d%Creset" --abbrev-commit --'
    - alias.type 'cat-file -t'
    - alias.dump 'cat-file -p'
    - alias.unstage 'reset HEAD'
    - alias.discard 'checkout --'

- name: install git up (globally so it will be picked up as an external command)
  become: true
  gem: name=git-up state=latest user_install=false

- name: install git extras
  homebrew: name={{ item }}
  with_items: 
    - git-extras
    - tig

- name: install DiffMerge
  homebrew_cask: name={{ item }}
  with_items:
   - diffmerge

- name: config diffmerge
  command: git config --global {{ item }}
  with_items:
   - diff.tool diffmerge
   - difftool.diffmerge.cmd '/usr/local/bin/diffmerge "$LOCAL" "$REMOTE"'
   - merge.tool diffmerge
   - mergetool.diffmerge.trustExitCode true
   - mergetool.diffmerge.cmd '/usr/local/bin/diffmerge --merge --result="$MERGED" "$LOCAL" "$BASE" "$REMOTE"'
