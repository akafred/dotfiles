- name: setup git - name
  command: git config --global user.name "akafred"

- name: setup git - email
  command: git config --global user.email "github@akafred.com"

- name: create .gitignore_global
  file:
    path: "{{ ansible_env.HOME }}/.gitignore_global"
    state: touch

- name: add entries to .gitignore_global
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.gitignore_global"
    line: "{{ item }}"
  with_items:
    - .DS_Store
    - .idea

- name: config to use .gitignore_global
  command: git config --global {{ item }}
  with_items:
    - core.excludesfile ~/.gitignore_global

- name: config to use main as default branch
  command: git config --global {{ item }}
  with_items:
    - init.defaultBranch main

- name: copy .gitmsg
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/{{ item }}"
  with_items:
    - .gitmsg

- name: setup .gitmsg
  command: git config --global {{ item }}
  with_items:
    - commit.template ~/.gitmsg

- name: config push default
  command: git config --global {{ item }}
  with_items:
    - push.default simple

- name: create .ssh
  file:
    path: "{{ ansible_env.HOME }}/.ssh"
    state: directory

- name: create .ssh/config
  file:
    path: "{{ ansible_env.HOME }}/.ssh/config"
    state: touch

- name: set up github in .ssh/config
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.ssh/config"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Github"
    content: |
             Host github*
                HostName github.com
                User git
                AddKeysToAgent yes
                IdentitiesOnly yes

             Host github.com
                IdentityFile ~/.ssh/id_rsa

- name: config colors
  command: git config --global {{ item }}
  with_items:
    - color.diff auto
    - color.status auto
    - color.branch auto

- name: config immediate autocorrect
  command: git config --global {{ item }}
  with_items:
    - help.autocorrect '-1'

- name: config aliases
  command: git config --global {{ item }}
  with_items:
    - alias.co checkout
    - alias.ci commit
    - alias.cp cherry-pick
    - alias.st status
    - alias.br branch
    - alias.hist 'log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'
    - alias.lg 'log --all --color --graph --pretty=format:"%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(blue)<%cn>%Creset%C(yellow)%d%Creset" --abbrev-commit --'
    - alias.type 'cat-file -t'
    - alias.dump 'cat-file -p'
    - alias.unstage 'reset HEAD'
    - alias.discard 'checkout --'
    - alias.back 'checkout HEAD~'
    - alias.fwd '!sh -c "git checkout $(git rev-list --topo-order HEAD..$1 | tail -1) --"'

- name: install git up (globally so it will be picked up as an external command)
  become: true
  gem: name=git-up state=latest user_install=false
  when: ansible_system == "Darwin"

- name: install git up
  pip:
    name: git-up
    extra_args: --trusted-host pypi.org --trusted-host files.pythonhosted.org
  become: true
  when: ansible_pkg_mgr == "yum"

- name: install git extras
  package:
    name: "{{ item }}"
  with_items:
    - git-extras
    - tig
  become: "{{ ansible_pkg_mgr == 'yum' }}"
  when: ansible_pkg_mgr != "yum" # We have issues

- name: install DiffMerge
  package: name={{ item }}
  ignore_errors: yes
  with_items:
   - diffmerge
  when: ansible_system == "Darwin"

- name: config diffmerge
  command: git config --global {{ item }}
  with_items:
   - diff.tool diffmerge
   - difftool.diffmerge.cmd '/usr/local/bin/diffmerge "$LOCAL" "$REMOTE"'
   - merge.tool diffmerge
   - mergetool.diffmerge.trustExitCode true
   - mergetool.diffmerge.cmd '/usr/local/bin/diffmerge --merge --result="$MERGED" "$LOCAL" "$BASE" "$REMOTE"'
  when: ansible_system == "Darwin"

- name: diff-so-fancy install
  homebrew: name=diff-so-fancy

- name: diff-so-fancy config
  command: git config --global {{ item }}
  with_items:
   - core.pager 'diff-so-fancy | less --tabs=4 -RFX'
   - color.diff-highlight.oldNormal 'red bold'
   - color.diff-highlight.oldHighlight 'red bold 52'
   - color.diff-highlight.newNormal 'green bold'
   - color.diff-highlight.newHighlight 'green bold 22'
   - alias.olddiff '!git --no-pager diff'

- name: rebase on pull
  command: git config --global {{ item }}
  with_items:
   - branch.autosetuprebase 'always'

- name: install GitUp
  package:
    name: "{{ item }}"
  ignore_errors: yes
  with_items:
   - GitUp
  when: ansible_system == "Darwin"

- name: tap git-time-metric-stuff
  homebrew_tap:
    name: git-time-metric/gtm
  when: ansible_system == "Darwin"

- name: install git-time-metric
  homebrew:
    name: gtm
  when: ansible_system == "Darwin"

- name: install git-secrets
  homebrew:
    name: git-secrets
  when: ansible_system == "Darwin"
