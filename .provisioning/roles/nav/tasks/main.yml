- name: create projects folder
  file:
    path: "{{ ansible_env.HOME }}/Projects/navikt"
    state: directory
    owner: "{{ ansible_env.USER }}"
    mode: 0750

- name: shell-script environment stuff
  copy:
    src: nav_shellrc.sh
    dest: "{{ ansible_env.HOME }}/.nav_shellrc.sh"

- name: init nav environment
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Nav environment"
    content: "source {{ ansible_env.HOME }}/.nav_shellrc.sh"

- name: update hosts-file
  become: true
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Nav environment"
    content: |
             127.0.0.1  someservice.nav.no

- name: create nav-profile-for-git
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/{{ item }}"
    owner: "{{ ansible_env.USER }}"
    mode: 0640
  with_items:
    - "Projects/navikt/.gitconfig-nav"

- name: add nav-profile-for-git
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.gitconfig"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Nav environment"
    content: |
             [includeIf "gitdir:Projects/navikt/"]
                     path = ~/Projects/navikt/.gitconfig-nav

- name: ensure .ssh/config exists
  copy:
    content: ""
    force: no
    dest: "{{ ansible_env.HOME }}/.ssh/config"
    owner: "{{ ansible_env.USER }}"
    mode: 0600

- name: create .ssh/config.d
  file:
    path: "{{ ansible_env.HOME }}/.ssh/config.d"
    state: directory
    owner: "{{ ansible_env.USER }}"
    mode: 0750

- name: create nav config file
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/{{ item }}"
    owner: "{{ ansible_env.USER }}"
    mode: 0600
  with_items:
    - ".ssh/config.d/nav"

- name: make sure .ssh-config has nav stuff
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.ssh/config"
    insertbefore: BOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Nav environment"
    content: Include ~/.ssh/config.d/*

- name: create nav maven settings file
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/{{ item }}"
    owner: "{{ ansible_env.USER }}"
    mode: 0600
  with_items:
    - ".m2/navikt-settings.xml"
    - ".m2/fp-settings.xml"

#- name: create nav security file
#  copy:
#    src: "{{ item }}"
#    dest: "{{ ansible_env.HOME }}/{{ item }}"
#    owner: "{{ ansible_env.USER }}"
#    mode: 0600
#  with_items:
#    - ".m2/settings-security.xml"

- name: copy proxy cert
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/{{ item }}"
    owner: "{{ ansible_env.USER }}"
    mode: 0600
  with_items:
    - "proxy.cer"

- name: Import certificate to a given cacerts keystore
  become: true
  java_cert:
    cert_path: "{{ ansible_env.HOME }}/proxy.cer"
    cert_alias: webproxy
    executable: "{{ item }}/bin/keytool"
    keystore_path: "{{ item }}/lib/security/cacerts"
    keystore_pass: changeit
    state: present
  with_lines: "ls -d1 /Library/Java/JavaVirtualMachines/*/Contents/Home | grep -v temurin-8"

- name: setup mvn settings
  lineinfile:
    path: "{{ ansible_env.HOME }}/.m2/bin/mvn"
    regexp: "    \\*\\/navikt\\*\\).*;;"
    insertafter: '.*# options here:$'
    line: '    */navikt*)              SETTINGS="navikt-settings.xml" ;;'

- name: setup mvn settings
  lineinfile:
    path: "{{ ansible_env.HOME }}/.m2/bin/mvn"
    regexp: "    \\*\\/navikt\\/fp\\*\\).*;;"
    insertafter: '.*# options here:$'
    line: '    */navikt/fp*)              SETTINGS="fp-settings.xml" ;;'

- name: add tunneling for some repos to maven
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Maven in Nav-environment"
    content: |
             export MAVEN_OPTS='-Djava.net.useSystemProxies=true'

- name: create .gradle folder
  file:
    path: "{{ ansible_env.HOME }}/.gradle"
    state: directory
    owner: "{{ ansible_env.USER }}"
    mode: 0750

- name: ensure .gradle/gradle.properties
  copy:
    content: ""
    force: no
    dest: "{{ ansible_env.HOME }}/.gradle/gradle.properties"
    owner: "{{ ansible_env.USER }}"
    mode: 0600

- name: make sure .gradle/gradle.properties has Github Package Repo stuff
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.gradle/gradle.properties"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Github Package Repo"
    block: "{{lookup('file', 'gpr-content')}}"

- name: Get kubeconfig from github
  git:
    repo: 'git@github.com-kjetiljd:navikt/kubeconfigs.git'
    dest: "{{ ansible_env.HOME }}/Projects/navikt/kubeconfigs"
    update: no

- name: KUBECONFIG environment variable
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    line: export KUBECONFIG="{{ ansible_env.HOME }}/Projects/navikt/kubeconfigs/config"
    regexp: export KUBECONFIG


- name: Create a symbolic link
  file:
    src: "{{ ansible_env.HOME }}/Projects/navikt/kubeconfigs/config"
    dest: "{{ ansible_env.HOME }}/.kube/config"
    owner: "{{ ansible_env.USER }}"
    state: link

- name: Snyk CLI install step 1
  homebrew_tap:
    name: snyk/tap

- name: Snyk CLI install step 2
  homebrew:
    name: snyk

- name: Install Google Cloud SDK
  homebrew:
    name: google-cloud-sdk
  ignore_errors: yes

- name: fix gcloud
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for gcloud"
    content: |
             source "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
             source "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

- name: Tap nais
  homebrew_tap:
    name: nais/tap

- name: Install naisdevice
  homebrew_cask:
    name: naisdevice

- name: base tools
  homebrew:
    name: node

- name: install "meta" package
  npm:
    name: meta
    global: yes

- name: update hosts-file
  become: true
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK for FP enviroment"
    state: absent
    content: |
             127.0.0.1  fptilbake fpoppdrag fpformidling fprisk fpabonennt fpfrontend fpsak fpabakus vtp oracle postgres

- name: hedo-function
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Privileges app command line workaraound"
    content: |
             hedo() {
               user=$(id | grep -o "80(admin)")
               if [[ "$user" == "" ]]; then
                 /Applications/Privileges.app/Contents/Resources/PrivilegesCLI --add
               fi
             }

- name: add co-authors to .gitmsg
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.gitmsg"
    insertbefore: "# Uncomment.*"
    marker: "# Co-authors: {mark}"
    content: |
             #Co-authored-by: Mariam Pervez <mariam.pervez@nav.no>
             #Co-authored-by: Daniel Skarp√•s <daniel.skarpas@nav.no>
