- name: install zsh if not present
  package:
    name: zsh
  become: true
  when: ansible_system != 'Darwin'

- name: install oh_my_zsh
  shell: >
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    creates=~/.oh-my-zsh

- name: make sure we have a .zshrc
  shell: >
    cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
    creates=~/.zshrc

- name: check if zsh is default
  shell: "finger -l {{ ansible_env.USER }} | grep 'Shell' | awk '{ print $4 }' | grep -v '/bin/zsh'"
  register: zsh_check
  ignore_errors: true

- name: make zsh default
  become: true
  command: chsh -s /bin/zsh {{ ansible_env.USER }}
  when: zsh_check is success and ansible_system == 'Darwin'

- name: Add modules to .zshrc
  lineinfile:
    dest: "~/.zshrc"
    line: "plugins=(autojump brew docker fzf git github git-flow mvn vagrant sublime history-substring-search"
    regexp: "^[#\\s]*plugins="
  when: ansible_system != 'Darwin'

- name: Add modules to .zshrc
  lineinfile:
    dest: "~/.zshrc"
    line: "plugins=(autojump brew docker fzf git github git-flow kubectl kube-ps1 mvn macos vagrant sublime history-substring-search)"
    regexp: "^[#\\s]*plugins="
  when: ansible_system == 'Darwin'

- name: Add kubernetes info to prompt
  lineinfile:
    dest: "~/.zshrc"
    line: "PROMPT=$PROMPT'$(kube_ps1) '"
    regexp: "^PROMPT=$PROMPT'$(kube_ps1) '"
    insertafter: "^source $ZSH/oh-my-zsh.sh"

- name: Add timestamp to prompt
  lineinfile:
    dest: "~/.zshrc"
    line: 'PROMPT=%{$fg[yellow]%}[%T]%{$reset_color%}$PROMPT'
    search_string: 'PROMPT=%{$fg[yellow]%}[%T]%{$reset_color%}$PROMPT'
    insertafter: "^source $ZSH/oh-my-zsh.sh"

- name: Add command history sharing to .zshrc
  lineinfile:
    dest: "~/.zshrc"
    line: "setopt SHARE_HISTORY"
    regexp: "^#*[\\s]*setopt SHARE_HISTORY"

- name: Comment out stupid omz-install time PATH setting (which does not include $PATH)
  lineinfile:
    dest: ~/.zshrc
    line: "# \\1"
    regexp: "^(export PATH=(?:(?!\\$PATH).)*)$"
    backrefs: yes

- name: add paths_homes_etc to zshrc
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.zshrc"
    line: "source ~/.paths_homes_etc"
    regexp: "paths_homes_etc"
