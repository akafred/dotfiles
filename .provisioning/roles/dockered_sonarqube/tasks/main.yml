
#- name: create database for sonarqube
#  postgresql_db:
#    name: sonar
#    encoding: UTF-8
#    login_user: "{{ ansible_env.USER }}"
#    lc_collate: en_US.UTF-8
#    lc_ctype: en_US.UTF-8
#    template: template0
#
#- name: create user for sonarqube database
#  postgresql_user:
#    db: sonar
#    login_user: "{{ ansible_env.USER }}"
#    encrypted: yes
#    name: sonar
#    password: sonar
#    expires: infinity
#    role_attr_flags: NOSUPERUSER

#- name: Create directories for sonarqube volumes
#  become: true
#  file:
#    path: "{{ item }}"
#    state: directory
#    mode: '0775'
#    owner: "{{ ansible_env.USER }}"
#    group: staff
#  with_items:
#    - /opt/sonarqube
#    - /opt/sonarqube/data
#    - /opt/sonarqube/logs
#    - /opt/sonarqube/extensions

#- name: pull sonarqube docker image
#  docker_image:
#    name: sonarqube
#    source: pull
#    pull:
#      platform: linux/amd64

# argh ... fails after starting with colima
#- name: install and run sonarqube docker container
#  docker_container:
#    name: sonarqube
#    image: mwizner/sonarqube:8.9.5-community
#    state: started
#    pull: no
#    ports:
#      - "9000:9000"
#      - "9092:9092"
##    volumes:
##      - /opt/sonarqube/data
##      - /opt/sonarqube/extensions
##      - /opt/sonarqube/logs
#    container_default_behavior: compatibility
#    env:
#      SONARQUBE_JDBC_USERNAME: sonar
#      SONARQUBE_JDBC_PASSWORD: sonar
#      SONARQUBE_JDBC_URL: "jdbc:postgresql://host.lima.internal/sonar"
#    command:
#      -Dsonar.search.javaAdditionalOpts=-Dnode.store.allow_mmap=false"
##    healthcheck:
##      test: ["CMD", "curl", "--fail", "http://localhost:9000/"]
##      interval: 30s
##      timeout: 10s
##      retries: 3
##      start_period: 10s

# $(docker inspect --format="{{ .State.Running }}" sonarqube == "true")


- name: Create dir and file
  file:
    dest: "{{ ansible_env.HOME }}/.gradle"
    owner: "{{ ansible_env.USER }}"
    state: directory

- name: Create dir and file
  file:
    dest: "{{ ansible_env.HOME }}/.gradle/gradle.properties"
    state: touch


- name: set gradle props for local sonarqube
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.gradle/gradle.properties"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for local sonarqube"
    content: |
             systemProp.sonar.host.url=http://localhost:9000
             systemProp.sonar.login=admin
             systemProp.sonar.password=qO4RpBwB7T87

- name: put sonarqube_start.sh in bin
  copy:
    src: sonarqube_start.sh
    dest: "{{ ansible_env.HOME }}/bin/sonarqube_start.sh"
    owner: "{{ ansible_env.USER }}"
    group: staff
    mode: u=rwx,g=rx,o=r

- name: install and run sonarqube docker container
  shell: "{{ ansible_env.HOME }}/bin/sonarqube_start.sh"

#- name: stop database server BECAUSE STUPID FP DOCKER PSQL ON STANDARD PORT
#  shell: brew services stop {{ item }}
#  with_items:
#    - postgresql
