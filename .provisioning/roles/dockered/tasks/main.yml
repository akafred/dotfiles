
# - name: docker for mac
#  homebrew_cask:
#   name: docker
#    state: absent
#  become: true

- name: colima and docker
  homebrew:
    name:
      - colima
      - docker
      - docker-compose
  register: colima_install

- name: install pip requests in ansible python for ansible docker stuff to work
  command: "{{ansible_python_interpreter}} -m pip install requests --break-system-packages"

- file:
    path: "{{ ansible_env.HOME }}/.docker/cli-plugins"
    state: directory
    owner: "{{ ansible_env.USER }}"
    group: staff
    mode: 0750

- name: create symlink for docker-compose
  file:
    src: "/opt/homebrew/bin/docker-compose"
    dest: "/Users/{{ ansible_env.USER }}/.docker/cli-plugins/docker-compose"
    state: link
    force: yes

- name: create symlink for colima
  file:
    src: "~/.colima/docker.sock"
    dest: "/var/run/docker.sock"
    state: link
    force: yes
  become: true

- name: start colima
  shell: colima status || colima start --cpu 4 --memory 8

- name: more stuff to get colima to work (with e.g TestContainers)
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for colima / TestContainers"
    content: |
      export DOCKER_HOST="unix://${HOME}/.colima/docker.sock"
      export TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock
      export TESTCONTAINERS_RYUK_DISABLED=true

# - name: install pip for system-python (used by ansible locally)
#   command: "{{ansible_python_interpreter}} -m ensurepip --default-pip"
#   become: true

# - name: install docker for system python (used by ansible locally)
#   command: "{{ansible_python_interpreter}} -m pip --no-cache install docker"
#   become: true
