- name: install common tools with {{ ansible_pkg_mgr }}
  become: "{{ ansible_system != 'Darwin' }}"
  homebrew:
    name:
      - tree
      - wget
      - autojump
      - grep
      - "{{ 'ag' if (ansible_pkg_mgr == 'Homebrew') else 'the_silver_searcher' }}"

- name: patch autojump with zsh-file on rhel
  copy:
    src: autojump.zsh
    dest: /usr/share/autojump/autojump.zsh
    mode: 0644
  become: true
  when: ansible_system != 'Darwin'

- name: make sure we have autojump sourced
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for autojump"
    content: |
             source /usr/share/autojump/autojump.zsh
  when: ansible_system != 'Darwin'

- name: install mtr
  become: "{{ ansible_system != 'Darwin' }}"
  package:
    name: mtr
  when: ansible_system != 'Darwin'

- name: install mtr
  homebrew:
    name: mtr
  when: ansible_system == 'Darwin'

- name: tldr repo
  homebrew_tap:
    name: tldr-pages/tldr
  when: ansible_system == "Darwin"

- name: install tldr
  homebrew:
    name: tldr
  when: ansible_system == "Darwin"

- name: install multiplexers
  homebrew:
    name:
      - tmux
      - csshX
  when: ansible_system == "Darwin"

- name: fix thefuck
  become: "{{ ansible_system != 'Darwin' }}"
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for thefuck"
    content: |
             eval $(thefuck --alias)

- name: install thefuck
  homebrew:
    name: thefuck

- name: install more tools
  homebrew:
    name:
      - httpie
      - yq
      - bat
      - gh

- name: install shellcheck (fails on Apple M1 due to GHC issue)
  homebrew:
    name: shellcheck
  when: ansible_processor != 'Apple M1'

- name: install fzf
  homebrew:
    name: fzf

- name: setup fzf key-bindings and completion
  shell: "$(brew --prefix)/opt/fzf/install --no-fish --completion --key-bindings --no-update-rc"
  # creates: "{{ ansible_env.HOME }}/.fzf.zsh"

- name: setup fzf in rc-files
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK for fzf"
    content: |
             [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
