
- name: install ruby related tools
  homebrew: name={{ item }}
  with_items:
    - rbenv
    - ruby-build

- name: init rbenv
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK for rbenv"
    content: |
             export PATH="/Users/kjetiljd/.rbenv/shims:${PATH}"
             export RBENV_SHELL=zsh
             source '/usr/local/Cellar/rbenv/1.1.1/libexec/../completions/rbenv.zsh'
             command rbenv rehash 2>/dev/null
             rbenv() {
               local command
               command="$1"
               if [ "$#" -gt 0 ]; then
                 shift
               fi

               case "$command" in
               rehash|shell)
                 eval "$(rbenv "sh-$command" "$@")";;
               *)
                 command rbenv "$command" "$@";;
               esac
             }

- name: install a recent ruby version
  shell: source {{ ansible_env.HOME }}/.paths_homes_etc && rbenv install 2.4.1 --skip-existing  

- name: choose ruby version as default, instead of system installed one
  shell: source {{ ansible_env.HOME }}/.paths_homes_etc && rbenv global 2.4.1

- name: update the rbenv shim for bundler
  shell: source {{ ansible_env.HOME }}/.paths_homes_etc && rbenv rehash

- name: install bundler
  shell: source {{ ansible_env.HOME }}/.paths_homes_etc && gem install bundler

- name: workaround for issues building native extensions
  shell: source {{ ansible_env.HOME }}/.paths_homes_etc && bundle config build.nokogiri --use-system-libraries
