- name: install python
  package:
    name: "{{ item }}"
  become: ansible_system != "Darwin"
  with_items:
    - "python"

- name: make sure pip is installed
  package:
    name: "{{ item }}"
  with_items:
    - "python-pip"
  become: true
  when: ansible_pkg_mgr == "yum"

- name: make sure pip is updated
  shell: "{{ item }} install --upgrade pip"
  with_items:
    - "pip3"
  when: ansible_system == "Darwin"

- name: make sure pip is updated
  shell: "{{ item }} install --upgrade pip"
  with_items:
    - "pip"
  when: ansible_system != "Darwin"

- name: make sure we have virtualenv
  pip: name="{{ item }}" executable=pip3
  with_items:
    - "virtualenv"
    - "virtualenvwrapper"
  when: ansible_system == "Darwin"

- name: add virtualenvwrapper shell commands
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.paths_homes_etc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK for virtualenvwrapper shell commands"
    content: |
             export VIRTUALENVWRAPPER_PYTHON=python3
             export WORKON_HOME=$HOME/.virtualenvs
             export PROJECT_HOME=$HOME/Projects
             export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
             export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
             source /usr/local/bin/virtualenvwrapper.sh
  when: ansible_system == "Darwin"

- name: install jupyter
  homebrew: name="{{ item }}"
  with_items:
    - "jupyter"
  when: ansible_system == "Darwin"

- name: install ipython
  pip: name=IPython executable=pip3
  when: ansible_system == "Darwin"
